// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaTecnicaMicroServicios.DBContexts;

namespace PruebaTecnicaMicroServicios.Migrations
{
    [DbContext(typeof(PersonaContext))]
    [Migration("20220626021122_InicioEntidades")]
    partial class InicioEntidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("PruebaTecnicaMicroServicios.Entidades.Cliente", b =>
                {
                    b.Property<int>("clienteid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("PeronsaId")
                        .HasColumnType("int");

                    b.Property<string>("contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("clienteid");

                    b.HasIndex("PeronsaId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PruebaTecnicaMicroServicios.Entidades.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Clientesclienteid")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numeroCuenta")
                        .HasColumnType("int");

                    b.Property<double>("saldoInicial")
                        .HasColumnType("float");

                    b.Property<string>("tipoCuenta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Clientesclienteid");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("PruebaTecnicaMicroServicios.Entidades.Movimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Clientesclienteid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("saldo")
                        .HasColumnType("float");

                    b.Property<string>("tipoMovimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Clientesclienteid");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("PruebaTecnicaMicroServicios.Entidades.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<string>("genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("identificacion")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("PruebaTecnicaMicroServicios.Entidades.Cliente", b =>
                {
                    b.HasOne("PruebaTecnicaMicroServicios.Entidades.Persona", "Peronsa")
                        .WithMany()
                        .HasForeignKey("PeronsaId");

                    b.Navigation("Peronsa");
                });

            modelBuilder.Entity("PruebaTecnicaMicroServicios.Entidades.Cuenta", b =>
                {
                    b.HasOne("PruebaTecnicaMicroServicios.Entidades.Cliente", "Clientes")
                        .WithMany()
                        .HasForeignKey("Clientesclienteid");

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("PruebaTecnicaMicroServicios.Entidades.Movimiento", b =>
                {
                    b.HasOne("PruebaTecnicaMicroServicios.Entidades.Cliente", "Clientes")
                        .WithMany()
                        .HasForeignKey("Clientesclienteid");

                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
